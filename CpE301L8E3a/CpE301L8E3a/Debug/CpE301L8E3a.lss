
CpE301L8E3a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000017e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001d2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000204  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002b1  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000d1  00000000  00000000  00000515  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001a9  00000000  00000000  000005e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000790  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001a6  00000000  00000000  000007b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  0000095a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 bd 00 	jmp	0x17a	; 0x17a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#define F_CPU 8000000UL
#include <util/delay.h>
int main()
{
	//PORTD pins as input
	DDRD = 0x00;
  80:	1a b8       	out	0x0a, r1	; 10
	//Enable internal pull ups
	PORTD = 0xFF;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	8b b9       	out	0x0b, r24	; 11
	//Set PORTB1 pin as output
	DDRB = 0xFF;
  86:	84 b9       	out	0x04, r24	; 4
	//TOP = ICR1;
	//output compare OC1A 8 bit non inverted PWM
	//Clear OC1A on Compare Match, set OC1A at TOP
	//Fast PWM
	//ICR1 = 20000 defines 50Hz pwm
	ICR1 = 20000;
  88:	80 e2       	ldi	r24, 0x20	; 32
  8a:	9e e4       	ldi	r25, 0x4E	; 78
  8c:	90 93 87 00 	sts	0x0087, r25
  90:	80 93 86 00 	sts	0x0086, r24
		
	TCCR1A|=(0<<COM1A0)|(1<<COM1A1)|(0<<COM1B0)|(0<<COM1B1)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10); //TCCR1A = 0x82
  94:	e0 e8       	ldi	r30, 0x80	; 128
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	82 68       	ori	r24, 0x82	; 130
  9c:	80 83       	st	Z, r24
	TCCR1B|=(0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10);
  9e:	e1 e8       	ldi	r30, 0x81	; 129
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	80 81       	ld	r24, Z
  a4:	8a 61       	ori	r24, 0x1A	; 26
  a6:	80 83       	st	Z, r24
	//start timer with prescaler 8
	OCR1A = 2140;
  a8:	8c e5       	ldi	r24, 0x5C	; 92
  aa:	98 e0       	ldi	r25, 0x08	; 8
  ac:	90 93 89 00 	sts	0x0089, r25
  b0:	80 93 88 00 	sts	0x0088, r24
	// 2330 upper limit
	// 630 lower limit
	while (1)
	{
		OCR1A=2140;  //reset
  b4:	e8 e8       	ldi	r30, 0x88	; 136
  b6:	f0 e0       	ldi	r31, 0x00	; 0
		_delay_ms(1000); // 0 to 90
		OCR1A=1280;
  b8:	a0 e0       	ldi	r26, 0x00	; 0
  ba:	b5 e0       	ldi	r27, 0x05	; 5
		_delay_ms(2000); //delay 2 seconds		
		OCR1A=2140;  //reset
		_delay_ms(1000);
		OCR1A=1827; //move to 35degrees
  bc:	63 e2       	ldi	r22, 0x23	; 35
  be:	77 e0       	ldi	r23, 0x07	; 7
		_delay_ms(1000);
		OCR1A=997; //move to 125degrees
  c0:	45 ee       	ldi	r20, 0xE5	; 229
  c2:	53 e0       	ldi	r21, 0x03	; 3
		_delay_ms(2000); // delay 2 seconds		
		OCR1A=2140;  //reset
		_delay_ms(1000);
		OCR1A=490; //move to 180 degrees
  c4:	2a ee       	ldi	r18, 0xEA	; 234
  c6:	31 e0       	ldi	r19, 0x01	; 1
	OCR1A = 2140;
	// 2330 upper limit
	// 630 lower limit
	while (1)
	{
		OCR1A=2140;  //reset
  c8:	91 83       	std	Z+1, r25	; 0x01
  ca:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  cc:	1f ef       	ldi	r17, 0xFF	; 255
  ce:	c9 e6       	ldi	r28, 0x69	; 105
  d0:	d8 e1       	ldi	r29, 0x18	; 24
  d2:	11 50       	subi	r17, 0x01	; 1
  d4:	c0 40       	sbci	r28, 0x00	; 0
  d6:	d0 40       	sbci	r29, 0x00	; 0
  d8:	e1 f7       	brne	.-8      	; 0xd2 <main+0x52>
  da:	00 c0       	rjmp	.+0      	; 0xdc <main+0x5c>
  dc:	00 00       	nop
		_delay_ms(1000); // 0 to 90
		OCR1A=1280;
  de:	b1 83       	std	Z+1, r27	; 0x01
  e0:	a0 83       	st	Z, r26
  e2:	1f ef       	ldi	r17, 0xFF	; 255
  e4:	c3 ed       	ldi	r28, 0xD3	; 211
  e6:	d0 e3       	ldi	r29, 0x30	; 48
  e8:	11 50       	subi	r17, 0x01	; 1
  ea:	c0 40       	sbci	r28, 0x00	; 0
  ec:	d0 40       	sbci	r29, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <main+0x68>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <main+0x72>
  f2:	00 00       	nop
		_delay_ms(2000); //delay 2 seconds		
		OCR1A=2140;  //reset
  f4:	91 83       	std	Z+1, r25	; 0x01
  f6:	80 83       	st	Z, r24
  f8:	1f ef       	ldi	r17, 0xFF	; 255
  fa:	c9 e6       	ldi	r28, 0x69	; 105
  fc:	d8 e1       	ldi	r29, 0x18	; 24
  fe:	11 50       	subi	r17, 0x01	; 1
 100:	c0 40       	sbci	r28, 0x00	; 0
 102:	d0 40       	sbci	r29, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <main+0x7e>
 106:	00 c0       	rjmp	.+0      	; 0x108 <main+0x88>
 108:	00 00       	nop
		_delay_ms(1000);
		OCR1A=1827; //move to 35degrees
 10a:	71 83       	std	Z+1, r23	; 0x01
 10c:	60 83       	st	Z, r22
 10e:	1f ef       	ldi	r17, 0xFF	; 255
 110:	c9 e6       	ldi	r28, 0x69	; 105
 112:	d8 e1       	ldi	r29, 0x18	; 24
 114:	11 50       	subi	r17, 0x01	; 1
 116:	c0 40       	sbci	r28, 0x00	; 0
 118:	d0 40       	sbci	r29, 0x00	; 0
 11a:	e1 f7       	brne	.-8      	; 0x114 <main+0x94>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0x9e>
 11e:	00 00       	nop
		_delay_ms(1000);
		OCR1A=997; //move to 125degrees
 120:	51 83       	std	Z+1, r21	; 0x01
 122:	40 83       	st	Z, r20
 124:	1f ef       	ldi	r17, 0xFF	; 255
 126:	c3 ed       	ldi	r28, 0xD3	; 211
 128:	d0 e3       	ldi	r29, 0x30	; 48
 12a:	11 50       	subi	r17, 0x01	; 1
 12c:	c0 40       	sbci	r28, 0x00	; 0
 12e:	d0 40       	sbci	r29, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <main+0xaa>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0xb4>
 134:	00 00       	nop
		_delay_ms(2000); // delay 2 seconds		
		OCR1A=2140;  //reset
 136:	91 83       	std	Z+1, r25	; 0x01
 138:	80 83       	st	Z, r24
 13a:	1f ef       	ldi	r17, 0xFF	; 255
 13c:	c9 e6       	ldi	r28, 0x69	; 105
 13e:	d8 e1       	ldi	r29, 0x18	; 24
 140:	11 50       	subi	r17, 0x01	; 1
 142:	c0 40       	sbci	r28, 0x00	; 0
 144:	d0 40       	sbci	r29, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <main+0xc0>
 148:	00 c0       	rjmp	.+0      	; 0x14a <main+0xca>
 14a:	00 00       	nop
		_delay_ms(1000);
		OCR1A=490; //move to 180 degrees
 14c:	31 83       	std	Z+1, r19	; 0x01
 14e:	20 83       	st	Z, r18
 150:	1f ef       	ldi	r17, 0xFF	; 255
 152:	c9 e6       	ldi	r28, 0x69	; 105
 154:	d8 e1       	ldi	r29, 0x18	; 24
 156:	11 50       	subi	r17, 0x01	; 1
 158:	c0 40       	sbci	r28, 0x00	; 0
 15a:	d0 40       	sbci	r29, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <main+0xd6>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0xe0>
 160:	00 00       	nop
		_delay_ms(1000);		
		OCR1A=2140; //move to 0 degrees
 162:	91 83       	std	Z+1, r25	; 0x01
 164:	80 83       	st	Z, r24
 166:	1f ef       	ldi	r17, 0xFF	; 255
 168:	c3 ed       	ldi	r28, 0xD3	; 211
 16a:	d0 e3       	ldi	r29, 0x30	; 48
 16c:	11 50       	subi	r17, 0x01	; 1
 16e:	c0 40       	sbci	r28, 0x00	; 0
 170:	d0 40       	sbci	r29, 0x00	; 0
 172:	e1 f7       	brne	.-8      	; 0x16c <main+0xec>
 174:	00 c0       	rjmp	.+0      	; 0x176 <main+0xf6>
 176:	00 00       	nop
 178:	a7 cf       	rjmp	.-178    	; 0xc8 <main+0x48>

0000017a <_exit>:
 17a:	f8 94       	cli

0000017c <__stop_program>:
 17c:	ff cf       	rjmp	.-2      	; 0x17c <__stop_program>
